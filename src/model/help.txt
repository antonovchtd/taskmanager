    The following lists and describes commands to be used with the current TaskManager
    program.

    add                 enters a wizard that prompts you to enter in succession: the new task's title,
                        priority and due date in the format dd/mm/yy (or yyyy) + optionally time in the
                        format hh:mm. Separators can be dots (`.`), instead of slashes (`/`), or a mix
                        thereof, and the year is optional altogether -- the current one will be used.
                        Alternatively, the due date can be set relatively to the current time by typing
                        "in dd:hh:mm" (days are optional). If nothing is entered, priority defaults to NONE.

    edit <id>           enters the same wizard as "add". After the wizard is done, overwrites the
                        existing entry with the given ID (<id>) with the new data.

    subtask <id>        enters the same wizard as "add", but the new task is generated as a
                        subtask of the one given by the supplied ID (<id>).

    delete <id>         deletes the (sub)task with the ID given by <id>.

    complete <id>       sets the (sub)task with the ID given by <id> as completed.

    uncomplete <id>     sets the (sub)task with the ID given by <id> as not completed.

    label <id>          prompts the user to enter a label to be assigned to the task with ID
                        <id>.

    unlabel <id>        prompts the user to enter a label to be removed from the task with ID
                        <id>.

    UNLABEL <id>        clears all labels for the task with ID <id>.

    show [<label>]      when used with no argument, displays all tasks and their subtasks in a
         [<id>]         hierarchy, along with their IDs. When a label is given, shows only
                        (sub)tasks with this label. When an ID is given, shows that task and
                        its subtasks.

    save <filename>     saves current state of the program to the file given by the filename.

    load <filename>     loads current state of the program from the file given by the filename,
                        overwriting the current state (tasks).

    help                shows this help.

